@model SmartMonitorAdmin.Models.Parameter

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)
        <table style="border-collapse: separate; border-spacing: 10px;">
            <tr>
                <td align="left" valign="top" style="width:50%">
                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label" })
                </td>
                <td align="left" valign="top" style="width:50%">
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </td>
            </tr>
            <tr>
                <td align="left" valign="top" style="width:50%">
                    @Html.LabelFor(model => model.Type, htmlAttributes: new { @class = "control-label" })
                </td>
                <td align="left" valign="top" style="width:50%">
                    @Html.EnumDropDownListFor(model => model.Type, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Type, "", new { @class = "text-danger" })
                </td>
            </tr>
            <tr>
                <td align="left" valign="top" style="width:50%">
                    @Html.LabelFor(model => model.Units, htmlAttributes: new { @class = "control-label" })
                </td>
                <td align="left" valign="top" style="width:50%">
                    @Html.EditorFor(model => model.Units, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Units, "", new { @class = "text-danger" })
                </td>
            </tr>
            <tr>
                <td align="left" valign="top" style="width:50%">
                   @Html.LabelFor(model => model.LogToDatabase, htmlAttributes: new { @class = "control-label" })
                </td>
                <td align="left" valign="top" style="width:50%">
                    @Html.EnumDropDownListFor(model => model.LogToDatabase, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.LogToDatabase, "", new { @class = "text-danger" })
                </td>
            </tr>
            <tr>
                <td align="left" valign="top" style="width:50%">
                   @Html.LabelFor(model => model.Serial, htmlAttributes: new { @class = "control-label" })
                </td>
                <td align="left" valign="top" style="width:50%">
                    @Html.EditorFor(model => model.Serial, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Serial, "", new { @class = "text-danger" })
                </td>
            </tr>
            <tr>
                <td align="left" valign="top" style="width:50%">
                   @Html.LabelFor(model => model.MonitoringInterval, htmlAttributes: new { @class = "control-label" })
                </td>
                <td align="left" valign="top" style="width:50%">
                    @Html.EditorFor(model => model.MonitoringInterval, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.MonitoringInterval, "", new { @class = "text-danger" })
                </td>
            </tr>
            <tr>
                <td align="left" valign="top" style="width:50%">
                    @Html.LabelFor(model => model.MonitoringIntervalType, htmlAttributes: new { @class = "control-label" })
                </td>
                <td align="left" valign="top" style="width:50%">
                    @Html.EnumDropDownListFor(model => model.MonitoringIntervalType, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.MonitoringIntervalType, "", new { @class = "text-danger" })
                </td>
            </tr>
            <tr>
                <td align="left" valign="top" style="width:50%">
                    @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label" })
                </td>
                <td align="left" valign="top" style="width:50%">
                    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                </td>
            </tr>
            <tr>
                <td align="left" valign="top" style="width:50%">
                </td>
                <td align="right" valign="top" style="width:50%">
                    <input type="submit" value="Save" class="btn btn-default" />
                    <input type="button" value="Close" onclick="window.location.href='@Url.Action("Index", "Parameter" )';" />
                </td>
            </tr>
        </table>
    </div>
    @*<div class="form-horizontal">
        <h4>Parameter</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Type, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.Type, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Type, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Units, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Units, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Units, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LogToDatabase, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.LogToDatabase, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LogToDatabase, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Serial, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Serial, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Serial, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MonitoringInterval, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MonitoringInterval, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MonitoringInterval, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MonitoringIntervalType, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.MonitoringIntervalType, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MonitoringIntervalType, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Alarms, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Alarms, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Alarms, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
                <input type="button" value="Close" onclick="window.location.href='@Url.Action("Index", "Parameter" )';" />
            </div>
        </div>
    </div>*@
}
