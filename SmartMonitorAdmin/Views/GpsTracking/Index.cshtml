@model SmartMonitorAdmin.Models.GpsMap

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js"></script>
<script src="http://maps.googleapis.com/maps/api/js?key=AIzaSyBmbUmNBrIOD34KMmbPGpPwXybAbj5VBkI&callback=initMap" async defer></script>
@*<style>
    /* Always set the map height explicitly to define the size of the div
       * element that contains the map. */
    #map {
        height: 100%;
    }
    /* Optional: Makes the sample page fill the window. */
    html, body {
        height: 100%;
        margin: 0;
        padding: 0;
    }
</style>*@
<script type="text/javascript">
    var deviceMarkers = [];
    var map;

    function initMap() {

        var mapOptions = {
            center: new google.maps.LatLng(0, 0),
            zoom: 1,
            minZoom: 1
        };

        map = new google.maps.Map(document.getElementById('googleMap'), mapOptions);

        var allowedBounds = new google.maps.LatLngBounds(
            new google.maps.LatLng(85, -180),	// top left corner of map
            new google.maps.LatLng(-85, 180)	// bottom right corner
        );

        var k = 5.0;
        var n = allowedBounds.getNorthEast().lat() - k;
        var e = allowedBounds.getNorthEast().lng() - k;
        var s = allowedBounds.getSouthWest().lat() + k;
        var w = allowedBounds.getSouthWest().lng() + k;
        var neNew = new google.maps.LatLng(n, e);
        var swNew = new google.maps.LatLng(s, w);
        boundsNew = new google.maps.LatLngBounds(swNew, neNew);
        map.fitBounds(boundsNew);

        setInterval(function () {
            refresh();
        }, 1000);
    }

        ////google.maps.event.addDomListener(window, 'load', initMap);

        //refresh();

    function refresh() {
        $.ajax(
            {
                type: "POST",
                url: "@Url.Action("Refresh", "GpsTracking")",
                success: function (result) {
                    refreshMarkers(result);
                },
                error: function (ex) {
                    // handle error
                }
            });
    }

    function refreshMarkers(data) {
        deleteMarkers();

        for (var i = 0; i < data.Devices.length; i++) {
            var device = data.Devices[i];
            addMarker(device.DeviceId, device.Name, device.Latitude, device.Longitude);
        }
    }

    function addMarker(id, name, latitude, longitude) {
        var latLng = { lat: latitude, lng: longitude };
        var marker = new google.maps.Marker({
            position: latLng,
            map: map,
            title: name,
            draggable: false
        });
        deviceMarkers.push(marker);
    }

    // Sets the map on all markers in the array.
    function setMapOnAll(map) {
        for (var i = 0; i < deviceMarkers.length; i++) {
            deviceMarkers[i].setMap(map);
        }
    }

    // Removes the markers from the map, but keeps them in the array.
    function clearMarkers() {
        setMapOnAll(null);
    }

    // Shows any markers currently in the array.
    function showMarkers() {
        setMapOnAll(map);
    }

    // Deletes all markers in the array by removing references to them.
    function deleteMarkers() {
        clearMarkers();
        deviceMarkers = [];
    }
</script>

<div id="googleMap" style="width:1000px;height:600px;"></div>
